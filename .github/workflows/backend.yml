name: Backend

on:
  push:
    branches: [main]
  pull_request:
    paths:
    - 'service/**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DFX_VERSION: 0.11.0
      IC_REPL_VERSION: 0.1.3
      VESSEL_VERSION: v0.6.3
      CI: true
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install
        run: |
          echo y | DFX_VERSION=$DFX_VERSION bash -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"
          wget https://github.com/chenyan2002/ic-repl/releases/download/$IC_REPL_VERSION/ic-repl-linux64
          cp ./ic-repl-linux64 /usr/local/bin/ic-repl
          chmod a+x /usr/local/bin/ic-repl
          wget https://github.com/dfinity/vessel/releases/download/$VESSEL_VERSION/vessel-linux64
          cp ./vessel-linux64 /usr/local/bin/vessel
          chmod a+x /usr/local/bin/vessel
      - name: Build and Test
        run: |
          npm install
          dfx start --background
          dfx deploy --argument '(null)'
          cd service/pool/tests/actor_class
          dfx canister create Parent
          dfx build Parent
          (for f in service/pool/tests/*.test.sh; do
            echo "==== Run test $f ===="
            ic-repl -r http://localhost:8000 "$f" || exit
          done)
      - name: Upgrade safety check
        if: github.event_name == 'pull_request'
        run: |
          cp .dfx/local/canisters/backend/backend.most backend.new.most
          git checkout main
          dfx build backend
          cp .dfx/local/canisters/backend/backend.most backend.old.most
          $(dfx cache show)/moc --stable-compatible backend.old.most backend.new.most
      - name: stop dfx
        run: |
          echo "dfx stop"
          dfx stop
